{"title":"Topic Modelling - Theory","markdown":{"yaml":{"title":"Topic Modelling - Theory","description":"Each statement in Hansard needs to be classified by its topic. Sometimes Hansard includes titles that make the topic clear. But not every statement has a title and the titles do not always define topics in a well-defined and consistent way. One way to get consistent estimates of the topics of each statement in Hansard is to use the latent Dirichlet allocation (LDA) method of Blei, Ng, Jordan, @Blei2003latent, as implemented by the R package 'topicmodels' by Grun @Grun2011.\n","author":[{"name":"Rohan Alexander"}],"date":"2018-06-29","output":{"distill::distill_article":{"self_contained":false}},"bibliography":"bibliography.bib"},"headingText":"Overview","containsRefs":false,"markdown":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(tidyverse)\n```\n\n*These are notes that I put together in the process of trying to understand how topic modelling works with a view to applying it to Australia's Hansard. There are undoubtedly mistakes and aspects that are unclear. Please get in touch if you have any suggestions.*\n\nEach statement in Hansard needs to be classified by its topic. Sometimes Hansard includes titles that make the topic clear. But not every statement has a title and the titles do not always define topics in a well-defined and consistent way. One way to get consistent estimates of the topics of each statement in Hansard is to use the latent Dirichlet allocation (LDA) method of @Blei2003latent, as implemented by the R package 'topicmodels' by @Grun2011. \n\nThe key assumption behind the LDA method is that each statement, 'a document', in Hansard is made by a speaker who decides the topics they would like to talk about in that document, and then chooses words, 'terms', that are appropriate to those topics. A topic could be thought of as a collection of terms, and a document as a collection of topics. The topics are not specified *ex ante*; they are an outcome of the method. Terms are not necessarily unique to a particular topic, and a document could be about more than one topic. This provides more flexibility than other approaches such as a strict word count method. The goal is to have the words found in Hansard group themselves to define topics.\n\n# Document generation process\nAs applied to Hansard, the LDA method considers each statement to be a result of a process where a politician first chooses the topics they want to speak about. After choosing the topics, the speaker then chooses appropriate words to use for each of those topics. \n\nMore generally, the LDA topic model works by considering each document as having been generated by some probability distribution over topics. For instance, if there were five topics and two documents, then the first document may be comprised mostly of the first few topics; the other document may be mostly about the final few topics (Figure \\@ref(fig:topicsoverdocuments)).\n\n```{r topicsoverdocuments, echo=FALSE, fig.cap = \"Probability distributions over topics\", fig.show = 'hold'}\ndocument_1 <- tibble(\n  Topics = c(\n  \"topic 1\", \"topic 2\", \"topic 3\", \"topic 4\", \"topic 5\"\n  ),\n  Probability = c(0.40, 0.40, 0.1, 0.05, 0.05)\n  )\n\ndocument_2 <- tibble(\n  Topics = c(\n  \"topic 1\", \"topic 2\", \"topic 3\", \"topic 4\", \"topic 5\"\n  ),\n  Probability = c(0.01, 0.04, 0.35, 0.20, 0.4)\n  )  \n\npar(mfrow=c(2,1))\nggplot(document_1, aes(Topics, Probability)) +\n  geom_point() +\n  theme_classic() +\n  labs(title = \"Distribution over topics for Document 1\") +\n  coord_cartesian(ylim = c(0, 0.4))\n\nggplot(document_2, aes(Topics, Probability)) +\n  geom_point() +\n  theme_classic() +\n  labs(title = \"Distribution over topics for Document 2\") +\n  coord_cartesian(ylim = c(0, 0.4))\n```\n\nSimilarly, each topic could be considered a probability distribution over terms. To choose the terms used in each document the speaker picks terms from each topic in the appropriate proportion. For instance, if there were ten terms, then one topic could be defined by giving more weight to terms related to immigration; and some other topic may give more weight to terms related to the economy (Figure \\@ref(fig:topicsoverterms)).\n\n```{r topicsoverterms, echo=FALSE, fig.cap = \"Probability distributions over terms\", fig.show = 'hold'}\ntopic_1 <- tibble(\n  Terms = c(\n  \"immigration\", \"race\", \"influx\", \"loans\", \"wealth\", \"saving\", \"chinese\", \"france\", \"british\", \"english\"\n  ),\n  Probability = c(0.0083, 0.0083, 0.0083, 0.0083, 0.0083, 0.0083, 0.2, 0.15, 0.4, 0.2)\n  )\n\ntopic_2 <- tibble(\n  Terms = c(\n  \"immigration\", \"race\", \"influx\", \"loans\", \"wealth\", \"saving\", \"chinese\", \"france\", \"british\", \"english\"\n  ),\n  Probability = c(0.0142, 0.0142, 0.0142, 0.25, 0.35, 0.30, 0.0142, 0.0142, 0.0142, 0.0142)\n  )  \n\n# par(mar = c(4, 4, 0.1, 0.1))\nggplot(topic_1, aes(Terms, Probability)) +\n  geom_point() +\n  theme_classic() +\n  labs(title = \"Distribution over terms for Topic 1\") +\n  coord_cartesian(ylim = c(0, 0.4))\nggplot(topic_2, aes(Terms, Probability)) +\n  geom_point() +\n  theme_classic() +\n  labs(title = \"Distribution over terms for Topic 2\") +\n  coord_cartesian(ylim = c(0, 0.4))\n```\n\nFollowing @BleiLafferty2009, @blei2012 and @GriffithsSteyvers2004, the process by which a document is generated is more formally considered to be:\n\n1. There are $1, 2, \\dots, k, \\dots, K$ topics and the vocabulary consists of $1, 2, \\dots, V$ terms. For each topic, decide the terms that the topic uses by randomly drawing distributions over the terms. The distribution over the terms for the $k$th topic is $\\beta_k$. Typically a topic would be a small number of terms and so the Dirichlet distribution with hyperparameter $0<\\eta<1$ is used: $\\beta_k \\sim \\mbox{Dirichlet}(\\eta)$.[^Dirichletfootnote] Strictly, $\\eta$ is actually a vector of hyperparameters, one for each $K$, but in practice they all tend to be the same value.\n2. Decide the topics that each document will cover by randomly drawing distributions over the $K$ topics for each of the $1, 2, \\dots, d, \\dots, D$ documents. The topic distributions for the $d$th document are $\\theta_d$, and $\\theta_{d,k}$ is the topic distribution for topic $k$ in document $d$. Again, the Dirichlet distribution with the hyperparameter $0<\\alpha<1$ is used here because usually a document would only cover a handful of topics: $\\theta_d \\sim \\mbox{Dirichlet}(\\alpha)$. Again, strictly $\\alpha$ is vector of length $K$ of hyperparameters, but in practice each is usually the same value.\n3. If there are $1, 2, \\dots, n, \\dots, N$ terms in the $d$th document, then to choose the $n$th term, $w_{d, n}$:\n    a. Randomly choose a topic for that term $n$, in that document $d$, $z_{d,n}$, from the multinomial distribution over topics in that document, $z_{d,n} \\sim \\mbox{Multinomial}(\\theta_d)$. \n    b. Randomly choose a term from the relevant multinomial distribution over the terms for that topic, $w_{d,n} \\sim \\mbox{Multinomial}(\\beta_{z_{d,n}})$.\n    \n[^Dirichletfootnote]: The Dirichlet distribution is a variation of the beta distribution that is commonly used as a prior for categorical and multinomial variables. If there are just two categories, then the Dirichlet and the beta distributions are the same. In the special case of a symmetric Dirichlet distribution, $\\eta=1$, it is equivalent to a uniform distribution. If $\\eta<1$, then the distribution is sparse and concentrated on a smaller number of the values, and this number decreases as $\\eta$ decreases. A hyperparameter is a parameter of a prior distribution.\n\nGiven this set-up, the joint distribution for the variables is (@blei2012, p.6):\n$$p(\\beta_{1:K}, \\theta_{1:D}, z_{1:D, 1:N}, w_{1:D, 1:N}) = \\prod^{K}_{i=1}p(\\beta_i) \\prod^{D}_{d=1}p(\\theta_d) \\left(\\prod^N_{n=1}p(z_{d,n}|\\theta_d)p\\left(w_{d,n}|\\beta_{1:K},z_{d,n}\\right) \\right).$$\n\nBased on this document generation process the analysis problem, discussed in the next section, is to compute a posterior over $\\beta_{1:K}$ and $\\theta_{1:D}$, given $w_{1:D, 1:N}$. This is intractable directly, but can be approximated (@GriffithsSteyvers2004 and @blei2012).\n\n# Analysis process\nAfter the documents are created, they are all that we have to analyse. The term usage in each document, $w_{1:D, 1:N}$, is observed, but the topics are hidden, or 'latent'. We do not know the topics of each document, nor how terms defined the topics. That is, we do not know the probability distributions of Figures \\@ref(fig:topicsoverdocuments) or \\@ref(fig:topicsoverterms). In a sense we are trying to reverse the document generation process -- we have the terms and we would like to discover the topics.\n\nIf the earlier process around how the documents were generated is assumed and we observe the terms in each document, then we can obtain estimates of the topics (@SteyversGriffiths2006). The outcomes of the LDA process are probability distributions and these define the topics. Each term will be given a probability of being a member of a particular topic, and each document will be given a probability of being about a particular topic. That is, we are trying to calculate the posterior distribution of the topics given the terms observed in each document (@blei2012, p.7): \n$$p(\\beta_{1:K}, \\theta_{1:D}, z_{1:D, 1:N} | w_{1:D, 1:N}) = \\frac{p\\left(\\beta_{1:K}, \\theta_{1:D}, z_{1:D, 1:N}, w_{1:D, 1:N}\\right)}{p(w_{1:D, 1:N})}.$$\n\nThe initial practical step when implementing LDA given a corpus of documents is to remove 'stop words'. These are words that are common, but that don't typically help to define topics. There is a general list of stop words such as: \"a\"; \"a's\"; \"able\"; \"about\"; \"above\"... An additional list of words that are commonly found in Hansard, but likely don't help define topics is added to the general list. These additions include words such as: \"act\"; \"amendment\"; \"amount\"; \"australia\"; \"australian\"; \"bill\"... A full list will be available in a follow up post going through an example with R code. We also remove punctuation and capitalisation. The documents need to then be transformed into a document-term-matrix. This is essentially a table with a column of the number of times each term appears in each document.\n\nAfter the dataset is ready, the R package 'topicmodels' by @Grun2011 can be used to implement LDA and approximate the posterior. It does this using Gibbs sampling or the variational expectation-maximization algorithm. Following @SteyversGriffiths2006 and @Darling2011, the Gibbs sampling process attempts to find a topic for a particular term in a particular document, given the topics of all other terms for all other documents. Broadly, it does this by first assigning every term in every document to a random topic, specified by Dirichlet priors with $\\alpha = \\frac{50}{K}$ and $\\eta = 0.1$  (@SteyversGriffiths2006 recommends $\\eta = 0.01$), where $\\alpha$ refers to the distribution over topics and $\\eta$ refers to the distribution over terms (@Grun2011, p.7). It then selects a particular term in a particular document and assigns it to a new topic based on the conditional distribution where the topics for all other terms in all documents are taken as given (@Grun2011, p.6):\n$$p(z_{d, n}=k | w_{1:D, 1:N}, z'_{d, n}) \\propto \\frac{\\lambda'_{n\\rightarrow k}+\\eta}{\\lambda'_{.\\rightarrow k}+V\\eta} \\frac{\\lambda'^{(d)}_{n\\rightarrow k}+\\alpha}{\\lambda'^{(d)}_{-i}+K\\alpha} $$\nwhere $z'_{d, n}$ refers to all other topic assignments; $\\lambda'_{n\\rightarrow k}$ is a count of how many other times that term has been assigned to topic $k$; $\\lambda'_{.\\rightarrow k}$ is a count of how many other times that any term has been assigned to topic $k$; $\\lambda'^{(d)}_{n\\rightarrow k}$ is a count of how many other times that term has been assigned to topic $k$ in that particular document; and $\\lambda'^{(d)}_{-i}$ is a count of how many other times that term has been assigned in that document. Once $z_{d,n}$ has been estimated, then estimates for the distribution of words into topics and topics into documents can be backed out.\n\nThis conditional distribution assigns topics depending on how often a term has been assigned to that topic previously, and how common the topic is in that document (@SteyversGriffiths2006). The initial random allocation of topics means that the results of early passes through the corpus of document are poor, but given enough time the algorithm converges to an appropriate estimate. \n\n\n# Warnings and extensions\nThe choice of the number of topics, *k*, affects the results, and must be specified *a priori*. If there is a strong reason for a particular number, then this can be used. Otherwise, one way to choose an appropriate number is to use a test and training set process. Essentially, this means running the process on a variety of possible values for *k* and then picking an appropriate value that performs well.\n\nOne weakness of the LDA method is that it considers a 'bag of words' where the order of those words does not matter (@blei2012). It is possible to extend the model to reduce the impact of the bag-of-words assumption and add conditionality to word order. Additionally, alternatives to the Dirichlet distribution can be used to extend the model to allow for correlation. For instance, in Hansard topics related the army may be expected to be more commonly found with topics related to the navy, but less commonly with topics related to banking.\n\n# References\n\n","srcMarkdownNoYaml":"\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(tidyverse)\n```\n\n*These are notes that I put together in the process of trying to understand how topic modelling works with a view to applying it to Australia's Hansard. There are undoubtedly mistakes and aspects that are unclear. Please get in touch if you have any suggestions.*\n\n# Overview\nEach statement in Hansard needs to be classified by its topic. Sometimes Hansard includes titles that make the topic clear. But not every statement has a title and the titles do not always define topics in a well-defined and consistent way. One way to get consistent estimates of the topics of each statement in Hansard is to use the latent Dirichlet allocation (LDA) method of @Blei2003latent, as implemented by the R package 'topicmodels' by @Grun2011. \n\nThe key assumption behind the LDA method is that each statement, 'a document', in Hansard is made by a speaker who decides the topics they would like to talk about in that document, and then chooses words, 'terms', that are appropriate to those topics. A topic could be thought of as a collection of terms, and a document as a collection of topics. The topics are not specified *ex ante*; they are an outcome of the method. Terms are not necessarily unique to a particular topic, and a document could be about more than one topic. This provides more flexibility than other approaches such as a strict word count method. The goal is to have the words found in Hansard group themselves to define topics.\n\n# Document generation process\nAs applied to Hansard, the LDA method considers each statement to be a result of a process where a politician first chooses the topics they want to speak about. After choosing the topics, the speaker then chooses appropriate words to use for each of those topics. \n\nMore generally, the LDA topic model works by considering each document as having been generated by some probability distribution over topics. For instance, if there were five topics and two documents, then the first document may be comprised mostly of the first few topics; the other document may be mostly about the final few topics (Figure \\@ref(fig:topicsoverdocuments)).\n\n```{r topicsoverdocuments, echo=FALSE, fig.cap = \"Probability distributions over topics\", fig.show = 'hold'}\ndocument_1 <- tibble(\n  Topics = c(\n  \"topic 1\", \"topic 2\", \"topic 3\", \"topic 4\", \"topic 5\"\n  ),\n  Probability = c(0.40, 0.40, 0.1, 0.05, 0.05)\n  )\n\ndocument_2 <- tibble(\n  Topics = c(\n  \"topic 1\", \"topic 2\", \"topic 3\", \"topic 4\", \"topic 5\"\n  ),\n  Probability = c(0.01, 0.04, 0.35, 0.20, 0.4)\n  )  \n\npar(mfrow=c(2,1))\nggplot(document_1, aes(Topics, Probability)) +\n  geom_point() +\n  theme_classic() +\n  labs(title = \"Distribution over topics for Document 1\") +\n  coord_cartesian(ylim = c(0, 0.4))\n\nggplot(document_2, aes(Topics, Probability)) +\n  geom_point() +\n  theme_classic() +\n  labs(title = \"Distribution over topics for Document 2\") +\n  coord_cartesian(ylim = c(0, 0.4))\n```\n\nSimilarly, each topic could be considered a probability distribution over terms. To choose the terms used in each document the speaker picks terms from each topic in the appropriate proportion. For instance, if there were ten terms, then one topic could be defined by giving more weight to terms related to immigration; and some other topic may give more weight to terms related to the economy (Figure \\@ref(fig:topicsoverterms)).\n\n```{r topicsoverterms, echo=FALSE, fig.cap = \"Probability distributions over terms\", fig.show = 'hold'}\ntopic_1 <- tibble(\n  Terms = c(\n  \"immigration\", \"race\", \"influx\", \"loans\", \"wealth\", \"saving\", \"chinese\", \"france\", \"british\", \"english\"\n  ),\n  Probability = c(0.0083, 0.0083, 0.0083, 0.0083, 0.0083, 0.0083, 0.2, 0.15, 0.4, 0.2)\n  )\n\ntopic_2 <- tibble(\n  Terms = c(\n  \"immigration\", \"race\", \"influx\", \"loans\", \"wealth\", \"saving\", \"chinese\", \"france\", \"british\", \"english\"\n  ),\n  Probability = c(0.0142, 0.0142, 0.0142, 0.25, 0.35, 0.30, 0.0142, 0.0142, 0.0142, 0.0142)\n  )  \n\n# par(mar = c(4, 4, 0.1, 0.1))\nggplot(topic_1, aes(Terms, Probability)) +\n  geom_point() +\n  theme_classic() +\n  labs(title = \"Distribution over terms for Topic 1\") +\n  coord_cartesian(ylim = c(0, 0.4))\nggplot(topic_2, aes(Terms, Probability)) +\n  geom_point() +\n  theme_classic() +\n  labs(title = \"Distribution over terms for Topic 2\") +\n  coord_cartesian(ylim = c(0, 0.4))\n```\n\nFollowing @BleiLafferty2009, @blei2012 and @GriffithsSteyvers2004, the process by which a document is generated is more formally considered to be:\n\n1. There are $1, 2, \\dots, k, \\dots, K$ topics and the vocabulary consists of $1, 2, \\dots, V$ terms. For each topic, decide the terms that the topic uses by randomly drawing distributions over the terms. The distribution over the terms for the $k$th topic is $\\beta_k$. Typically a topic would be a small number of terms and so the Dirichlet distribution with hyperparameter $0<\\eta<1$ is used: $\\beta_k \\sim \\mbox{Dirichlet}(\\eta)$.[^Dirichletfootnote] Strictly, $\\eta$ is actually a vector of hyperparameters, one for each $K$, but in practice they all tend to be the same value.\n2. Decide the topics that each document will cover by randomly drawing distributions over the $K$ topics for each of the $1, 2, \\dots, d, \\dots, D$ documents. The topic distributions for the $d$th document are $\\theta_d$, and $\\theta_{d,k}$ is the topic distribution for topic $k$ in document $d$. Again, the Dirichlet distribution with the hyperparameter $0<\\alpha<1$ is used here because usually a document would only cover a handful of topics: $\\theta_d \\sim \\mbox{Dirichlet}(\\alpha)$. Again, strictly $\\alpha$ is vector of length $K$ of hyperparameters, but in practice each is usually the same value.\n3. If there are $1, 2, \\dots, n, \\dots, N$ terms in the $d$th document, then to choose the $n$th term, $w_{d, n}$:\n    a. Randomly choose a topic for that term $n$, in that document $d$, $z_{d,n}$, from the multinomial distribution over topics in that document, $z_{d,n} \\sim \\mbox{Multinomial}(\\theta_d)$. \n    b. Randomly choose a term from the relevant multinomial distribution over the terms for that topic, $w_{d,n} \\sim \\mbox{Multinomial}(\\beta_{z_{d,n}})$.\n    \n[^Dirichletfootnote]: The Dirichlet distribution is a variation of the beta distribution that is commonly used as a prior for categorical and multinomial variables. If there are just two categories, then the Dirichlet and the beta distributions are the same. In the special case of a symmetric Dirichlet distribution, $\\eta=1$, it is equivalent to a uniform distribution. If $\\eta<1$, then the distribution is sparse and concentrated on a smaller number of the values, and this number decreases as $\\eta$ decreases. A hyperparameter is a parameter of a prior distribution.\n\nGiven this set-up, the joint distribution for the variables is (@blei2012, p.6):\n$$p(\\beta_{1:K}, \\theta_{1:D}, z_{1:D, 1:N}, w_{1:D, 1:N}) = \\prod^{K}_{i=1}p(\\beta_i) \\prod^{D}_{d=1}p(\\theta_d) \\left(\\prod^N_{n=1}p(z_{d,n}|\\theta_d)p\\left(w_{d,n}|\\beta_{1:K},z_{d,n}\\right) \\right).$$\n\nBased on this document generation process the analysis problem, discussed in the next section, is to compute a posterior over $\\beta_{1:K}$ and $\\theta_{1:D}$, given $w_{1:D, 1:N}$. This is intractable directly, but can be approximated (@GriffithsSteyvers2004 and @blei2012).\n\n# Analysis process\nAfter the documents are created, they are all that we have to analyse. The term usage in each document, $w_{1:D, 1:N}$, is observed, but the topics are hidden, or 'latent'. We do not know the topics of each document, nor how terms defined the topics. That is, we do not know the probability distributions of Figures \\@ref(fig:topicsoverdocuments) or \\@ref(fig:topicsoverterms). In a sense we are trying to reverse the document generation process -- we have the terms and we would like to discover the topics.\n\nIf the earlier process around how the documents were generated is assumed and we observe the terms in each document, then we can obtain estimates of the topics (@SteyversGriffiths2006). The outcomes of the LDA process are probability distributions and these define the topics. Each term will be given a probability of being a member of a particular topic, and each document will be given a probability of being about a particular topic. That is, we are trying to calculate the posterior distribution of the topics given the terms observed in each document (@blei2012, p.7): \n$$p(\\beta_{1:K}, \\theta_{1:D}, z_{1:D, 1:N} | w_{1:D, 1:N}) = \\frac{p\\left(\\beta_{1:K}, \\theta_{1:D}, z_{1:D, 1:N}, w_{1:D, 1:N}\\right)}{p(w_{1:D, 1:N})}.$$\n\nThe initial practical step when implementing LDA given a corpus of documents is to remove 'stop words'. These are words that are common, but that don't typically help to define topics. There is a general list of stop words such as: \"a\"; \"a's\"; \"able\"; \"about\"; \"above\"... An additional list of words that are commonly found in Hansard, but likely don't help define topics is added to the general list. These additions include words such as: \"act\"; \"amendment\"; \"amount\"; \"australia\"; \"australian\"; \"bill\"... A full list will be available in a follow up post going through an example with R code. We also remove punctuation and capitalisation. The documents need to then be transformed into a document-term-matrix. This is essentially a table with a column of the number of times each term appears in each document.\n\nAfter the dataset is ready, the R package 'topicmodels' by @Grun2011 can be used to implement LDA and approximate the posterior. It does this using Gibbs sampling or the variational expectation-maximization algorithm. Following @SteyversGriffiths2006 and @Darling2011, the Gibbs sampling process attempts to find a topic for a particular term in a particular document, given the topics of all other terms for all other documents. Broadly, it does this by first assigning every term in every document to a random topic, specified by Dirichlet priors with $\\alpha = \\frac{50}{K}$ and $\\eta = 0.1$  (@SteyversGriffiths2006 recommends $\\eta = 0.01$), where $\\alpha$ refers to the distribution over topics and $\\eta$ refers to the distribution over terms (@Grun2011, p.7). It then selects a particular term in a particular document and assigns it to a new topic based on the conditional distribution where the topics for all other terms in all documents are taken as given (@Grun2011, p.6):\n$$p(z_{d, n}=k | w_{1:D, 1:N}, z'_{d, n}) \\propto \\frac{\\lambda'_{n\\rightarrow k}+\\eta}{\\lambda'_{.\\rightarrow k}+V\\eta} \\frac{\\lambda'^{(d)}_{n\\rightarrow k}+\\alpha}{\\lambda'^{(d)}_{-i}+K\\alpha} $$\nwhere $z'_{d, n}$ refers to all other topic assignments; $\\lambda'_{n\\rightarrow k}$ is a count of how many other times that term has been assigned to topic $k$; $\\lambda'_{.\\rightarrow k}$ is a count of how many other times that any term has been assigned to topic $k$; $\\lambda'^{(d)}_{n\\rightarrow k}$ is a count of how many other times that term has been assigned to topic $k$ in that particular document; and $\\lambda'^{(d)}_{-i}$ is a count of how many other times that term has been assigned in that document. Once $z_{d,n}$ has been estimated, then estimates for the distribution of words into topics and topics into documents can be backed out.\n\nThis conditional distribution assigns topics depending on how often a term has been assigned to that topic previously, and how common the topic is in that document (@SteyversGriffiths2006). The initial random allocation of topics means that the results of early passes through the corpus of document are poor, but given enough time the algorithm converges to an appropriate estimate. \n\n\n# Warnings and extensions\nThe choice of the number of topics, *k*, affects the results, and must be specified *a priori*. If there is a strong reason for a particular number, then this can be used. Otherwise, one way to choose an appropriate number is to use a test and training set process. Essentially, this means running the process on a variety of possible values for *k* and then picking an appropriate value that performs well.\n\nOne weakness of the LDA method is that it considers a 'bag of words' where the order of those words does not matter (@blei2012). It is possible to extend the model to reduce the impact of the bag-of-words assumption and add conditionality to word order. Additionally, alternatives to the Dirichlet distribution can be used to extend the model to allow for correlation. For instance, in Hansard topics related the army may be expected to be more commonly found with topics related to the navy, but less commonly with topics related to banking.\n\n# References\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":{"distill::distill_article":{"self_contained":false}},"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"topic_modelling-theory.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Danger","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.266","theme":"cosmo","title":"Topic Modelling - Theory","description":"Each statement in Hansard needs to be classified by its topic. Sometimes Hansard includes titles that make the topic clear. But not every statement has a title and the titles do not always define topics in a well-defined and consistent way. One way to get consistent estimates of the topics of each statement in Hansard is to use the latent Dirichlet allocation (LDA) method of Blei, Ng, Jordan, @Blei2003latent, as implemented by the R package 'topicmodels' by Grun @Grun2011.\n","author":[{"name":"Rohan Alexander"}],"date":"2018-06-29","bibliography":["bibliography.bib"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}